/**
 * @module index
 */
import { TSeed } from '@waves/ts-lib-crypto';
import { TPrivateKey } from '../types';
import { DataTransactionEntry } from '@waves/ts-types';
import { DataTransactionDeleteRequest } from '@waves/ts-types/src/parts';
export interface ICustomDataV1 {
    version: 1;
    /**
     * base64 encoded UInt8Array
     */
    binary: string;
    publicKey?: string;
}
export interface ICustomDataV2 {
    version: 2;
    data: Exclude<DataTransactionEntry, DataTransactionDeleteRequest>[];
    publicKey?: string;
}
export declare type TCustomData = ICustomDataV1 | ICustomDataV2;
export declare type TSignedData = TCustomData & {
    /**
     * base58 public key
     */
    publicKey: string | undefined;
    /**
     * base58 encoded blake2b(serialized data)
     */
    hash: string;
    /**
     * base58 encoded signature
     */
    signature: string | undefined;
};
/**
 * Signs [[TCustomData]]
 */
export declare function customData(cData: TCustomData, seed?: TSeed | TPrivateKey): TSignedData;
export declare function serializeCustomData(d: TCustomData): Uint8Array;
