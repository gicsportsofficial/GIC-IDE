declare const _default: {
    TTx: {
        anyOf: {
            $ref: string;
        }[];
        definitions: {
            "IAliasTransaction<LONG>": {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: number[];
                    };
                    alias: {
                        type: string;
                    };
                    timestamp: {
                        type: string;
                    };
                    fee: {
                        $ref: string;
                    };
                    version: {
                        type: string;
                    };
                    chainId: {
                        type: string;
                    };
                    feeAssetId: {
                        type: string[];
                    };
                    proofs: {
                        description: string;
                        minItems: number;
                        maxItems: number;
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    senderPublicKey: {
                        description: string;
                        type: string;
                    };
                };
                required: string[];
            };
            LONG: {
                type: string[];
            };
            "IIssueTransaction<LONG>": {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: number[];
                    };
                    name: {
                        minLength: number;
                        maxLength: number;
                        type: string;
                    };
                    description: {
                        maxLength: number;
                        type: string;
                    };
                    decimals: {
                        type: string;
                    };
                    quantity: {
                        $ref: string;
                    };
                    reissuable: {
                        type: string;
                    };
                    script: {
                        type: string;
                    };
                    timestamp: {
                        type: string;
                    };
                    fee: {
                        $ref: string;
                    };
                    version: {
                        type: string;
                    };
                    chainId: {
                        type: string;
                    };
                    feeAssetId: {
                        type: string[];
                    };
                    proofs: {
                        description: string;
                        minItems: number;
                        maxItems: number;
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    senderPublicKey: {
                        description: string;
                        type: string;
                    };
                };
                required: string[];
            };
            "ITransferTransaction<LONG>": {
                description: string;
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: number[];
                    };
                    recipient: {
                        type: string;
                    };
                    amount: {
                        $ref: string;
                    };
                    attachment: {
                        type: string[];
                    };
                    feeAssetId: {
                        type: string[];
                    };
                    assetId: {
                        type: string[];
                    };
                    timestamp: {
                        type: string;
                    };
                    fee: {
                        $ref: string;
                    };
                    version: {
                        type: string;
                    };
                    chainId: {
                        type: string;
                    };
                    proofs: {
                        description: string;
                        minItems: number;
                        maxItems: number;
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    senderPublicKey: {
                        description: string;
                        type: string;
                    };
                };
                required: string[];
            };
            "IReissueTransaction<LONG>": {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: number[];
                    };
                    assetId: {
                        type: string;
                    };
                    quantity: {
                        $ref: string;
                    };
                    reissuable: {
                        type: string;
                    };
                    timestamp: {
                        type: string;
                    };
                    fee: {
                        $ref: string;
                    };
                    version: {
                        type: string;
                    };
                    chainId: {
                        type: string;
                    };
                    feeAssetId: {
                        type: string[];
                    };
                    proofs: {
                        description: string;
                        minItems: number;
                        maxItems: number;
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    senderPublicKey: {
                        description: string;
                        type: string;
                    };
                };
                required: string[];
            };
            "IBurnTransaction<LONG>": {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: number[];
                    };
                    assetId: {
                        type: string;
                    };
                    amount: {
                        $ref: string;
                    };
                    timestamp: {
                        type: string;
                    };
                    fee: {
                        $ref: string;
                    };
                    version: {
                        type: string;
                    };
                    chainId: {
                        type: string;
                    };
                    feeAssetId: {
                        type: string[];
                    };
                    proofs: {
                        description: string;
                        minItems: number;
                        maxItems: number;
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    senderPublicKey: {
                        description: string;
                        type: string;
                    };
                };
                required: string[];
            };
            "ILeaseTransaction<LONG>": {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: number[];
                    };
                    amount: {
                        $ref: string;
                    };
                    recipient: {
                        type: string;
                    };
                    timestamp: {
                        type: string;
                    };
                    fee: {
                        $ref: string;
                    };
                    version: {
                        type: string;
                    };
                    chainId: {
                        type: string;
                    };
                    feeAssetId: {
                        type: string[];
                    };
                    proofs: {
                        description: string;
                        minItems: number;
                        maxItems: number;
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    senderPublicKey: {
                        description: string;
                        type: string;
                    };
                };
                required: string[];
            };
            "IExchangeTransaction<LONG>": {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: number[];
                    };
                    order1: {
                        $ref: string;
                    };
                    order2: {
                        $ref: string;
                    };
                    price: {
                        $ref: string;
                    };
                    amount: {
                        $ref: string;
                    };
                    buyMatcherFee: {
                        $ref: string;
                    };
                    sellMatcherFee: {
                        $ref: string;
                    };
                    timestamp: {
                        type: string;
                    };
                    fee: {
                        $ref: string;
                    };
                    version: {
                        type: string;
                    };
                    chainId: {
                        type: string;
                    };
                    feeAssetId: {
                        type: string[];
                    };
                    proofs: {
                        description: string;
                        minItems: number;
                        maxItems: number;
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    senderPublicKey: {
                        description: string;
                        type: string;
                    };
                };
                required: string[];
            };
            "IOrder<string|number>": {
                type: string;
                properties: {
                    version: {
                        type: string;
                    };
                    orderType: {
                        enum: string[];
                        type: string;
                    };
                    assetPair: {
                        type: string;
                        properties: {
                            amountAsset: {
                                type: string[];
                            };
                            priceAsset: {
                                type: string[];
                            };
                        };
                        required: string[];
                    };
                    price: {
                        type: string[];
                    };
                    amount: {
                        type: string[];
                    };
                    timestamp: {
                        type: string;
                    };
                    expiration: {
                        type: string;
                    };
                    matcherFee: {
                        type: string;
                    };
                    matcherPublicKey: {
                        type: string;
                    };
                    proofs: {
                        description: string;
                        minItems: number;
                        maxItems: number;
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    senderPublicKey: {
                        description: string;
                        type: string;
                    };
                };
                required: string[];
            };
            "ICancelLeaseTransaction<LONG>": {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: number[];
                    };
                    leaseId: {
                        type: string;
                    };
                    timestamp: {
                        type: string;
                    };
                    fee: {
                        $ref: string;
                    };
                    version: {
                        type: string;
                    };
                    chainId: {
                        type: string;
                    };
                    feeAssetId: {
                        type: string[];
                    };
                    proofs: {
                        description: string;
                        minItems: number;
                        maxItems: number;
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    senderPublicKey: {
                        description: string;
                        type: string;
                    };
                };
                required: string[];
            };
            "IMassTransferTransaction<LONG>": {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: number[];
                    };
                    transfers: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                    };
                    attachment: {
                        type: string[];
                    };
                    assetId: {
                        type: string[];
                    };
                    timestamp: {
                        type: string;
                    };
                    fee: {
                        $ref: string;
                    };
                    version: {
                        type: string;
                    };
                    chainId: {
                        type: string;
                    };
                    feeAssetId: {
                        type: string[];
                    };
                    proofs: {
                        description: string;
                        minItems: number;
                        maxItems: number;
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    senderPublicKey: {
                        description: string;
                        type: string;
                    };
                };
                required: string[];
            };
            "IMassTransferItem<LONG>": {
                type: string;
                properties: {
                    recipient: {
                        type: string;
                    };
                    amount: {
                        $ref: string;
                    };
                };
                required: string[];
            };
            "ISetScriptTransaction<LONG>": {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: number[];
                    };
                    script: {
                        description: string;
                        type: string[];
                    };
                    timestamp: {
                        type: string;
                    };
                    fee: {
                        $ref: string;
                    };
                    version: {
                        type: string;
                    };
                    chainId: {
                        type: string;
                    };
                    feeAssetId: {
                        type: string[];
                    };
                    proofs: {
                        description: string;
                        minItems: number;
                        maxItems: number;
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    senderPublicKey: {
                        description: string;
                        type: string;
                    };
                };
                required: string[];
            };
            "ISponsorshipTransaction<LONG>": {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: number[];
                    };
                    minSponsoredAssetFee: {
                        $ref: string;
                        description: string;
                    };
                    assetId: {
                        description: string;
                        type: string;
                    };
                    timestamp: {
                        type: string;
                    };
                    fee: {
                        $ref: string;
                    };
                    version: {
                        type: string;
                    };
                    chainId: {
                        type: string;
                    };
                    feeAssetId: {
                        type: string[];
                    };
                    proofs: {
                        description: string;
                        minItems: number;
                        maxItems: number;
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    senderPublicKey: {
                        description: string;
                        type: string;
                    };
                };
                required: string[];
            };
            "IDataTransaction<LONG>": {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: number[];
                    };
                    data: {
                        type: string;
                        items: {
                            anyOf: ({
                                allOf: ({
                                    $ref: string;
                                    type?: undefined;
                                    properties?: undefined;
                                    required?: undefined;
                                } | {
                                    type: string;
                                    properties: {
                                        key: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    $ref?: undefined;
                                })[];
                                type?: undefined;
                                properties?: undefined;
                                required?: undefined;
                            } | {
                                type: string;
                                properties: {
                                    type: {
                                        type: string;
                                    };
                                    value: {
                                        type: string;
                                    };
                                    key: {
                                        type: string;
                                    };
                                };
                                required: string[];
                                allOf?: undefined;
                            })[];
                        };
                    };
                    timestamp: {
                        type: string;
                    };
                    fee: {
                        $ref: string;
                    };
                    version: {
                        type: string;
                    };
                    chainId: {
                        type: string;
                    };
                    feeAssetId: {
                        type: string[];
                    };
                    proofs: {
                        description: string;
                        minItems: number;
                        maxItems: number;
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    senderPublicKey: {
                        description: string;
                        type: string;
                    };
                };
                required: string[];
            };
            IBooleanData: {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    value: {
                        type: string;
                    };
                };
                required: string[];
            };
            "IIntegerData<string|number>": {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    value: {
                        type: string[];
                    };
                };
                required: string[];
            };
            IStringData: {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    value: {
                        type: string;
                    };
                };
                required: string[];
            };
            IBinaryData: {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    value: {
                        type: string;
                    };
                };
                required: string[];
            };
            "ISetAssetScriptTransaction<LONG>": {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: number[];
                    };
                    assetId: {
                        type: string;
                    };
                    script: {
                        description: string;
                        type: string[];
                    };
                    timestamp: {
                        type: string;
                    };
                    fee: {
                        $ref: string;
                    };
                    version: {
                        type: string;
                    };
                    chainId: {
                        type: string;
                    };
                    feeAssetId: {
                        type: string[];
                    };
                    proofs: {
                        description: string;
                        minItems: number;
                        maxItems: number;
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    senderPublicKey: {
                        description: string;
                        type: string;
                    };
                };
                required: string[];
            };
            "IInvokeScriptTransaction<LONG>": {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: number[];
                    };
                    dApp: {
                        type: string;
                    };
                    feeAssetId: {
                        type: string[];
                    };
                    call: {
                        $ref: string;
                    };
                    payment: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                    };
                    timestamp: {
                        type: string;
                    };
                    fee: {
                        $ref: string;
                    };
                    version: {
                        type: string;
                    };
                    chainId: {
                        type: string;
                    };
                    proofs: {
                        description: string;
                        minItems: number;
                        maxItems: number;
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    senderPublicKey: {
                        description: string;
                        type: string;
                    };
                };
                required: string[];
            };
            "IInvokeScriptCall<LONG>": {
                type: string;
                properties: {
                    function: {
                        description: string;
                        type: string;
                    };
                    args: {
                        description: string;
                        type: string;
                        items: {
                            anyOf: {
                                $ref: string;
                            }[];
                        };
                    };
                };
                required: string[];
            };
            IInvokeScriptCallStringArgument: {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    value: {
                        type: string;
                    };
                };
                required: string[];
            };
            IInvokeScriptCallBinaryArgument: {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    value: {
                        type: string;
                    };
                };
                required: string[];
            };
            IInvokeScriptCallBoolArgument: {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    value: {
                        type: string;
                    };
                };
                required: string[];
            };
            "IInvokeScriptCallIntegerArgument<LONG>": {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    value: {
                        $ref: string;
                    };
                };
                required: string[];
            };
            "IInvokeScriptCallListArgument<LONG>": {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    value: {
                        type: string;
                        items: {
                            anyOf: {
                                $ref: string;
                            }[];
                        };
                    };
                };
                required: string[];
            };
            "IInvokeScriptPayment<string|number>": {
                type: string;
                properties: {
                    assetId: {
                        type: string[];
                    };
                    amount: {
                        type: string[];
                    };
                };
                required: string[];
            };
            "IUpdateAssetInfoTransaction<LONG>": {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: number[];
                    };
                    assetId: {
                        type: string;
                    };
                    name: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    timestamp: {
                        type: string;
                    };
                    fee: {
                        $ref: string;
                    };
                    version: {
                        type: string;
                    };
                    chainId: {
                        type: string;
                    };
                    feeAssetId: {
                        type: string[];
                    };
                    proofs: {
                        description: string;
                        minItems: number;
                        maxItems: number;
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    senderPublicKey: {
                        description: string;
                        type: string;
                    };
                };
                required: string[];
            };
        };
        $schema: string;
        $id: string;
    };
    IAliasTransaction: {
        type: string;
        properties: {
            type: {
                type: string;
                enum: number[];
            };
            alias: {
                type: string;
            };
            timestamp: {
                type: string;
            };
            fee: {
                $ref: string;
            };
            version: {
                type: string;
            };
            chainId: {
                type: string;
            };
            feeAssetId: {
                type: string[];
            };
            proofs: {
                description: string;
                minItems: number;
                maxItems: number;
                type: string;
                items: {
                    type: string;
                };
            };
            senderPublicKey: {
                description: string;
                type: string;
            };
        };
        required: string[];
        definitions: {
            LONG: {
                type: string[];
            };
        };
        $schema: string;
        $id: string;
    };
    IIssueTransaction: {
        type: string;
        properties: {
            type: {
                type: string;
                enum: number[];
            };
            name: {
                minLength: number;
                maxLength: number;
                type: string;
            };
            description: {
                maxLength: number;
                type: string;
            };
            decimals: {
                type: string;
            };
            quantity: {
                $ref: string;
            };
            reissuable: {
                type: string;
            };
            script: {
                type: string;
            };
            timestamp: {
                type: string;
            };
            fee: {
                $ref: string;
            };
            version: {
                type: string;
            };
            chainId: {
                type: string;
            };
            feeAssetId: {
                type: string[];
            };
            proofs: {
                description: string;
                minItems: number;
                maxItems: number;
                type: string;
                items: {
                    type: string;
                };
            };
            senderPublicKey: {
                description: string;
                type: string;
            };
        };
        required: string[];
        definitions: {
            LONG: {
                type: string[];
            };
        };
        $schema: string;
        $id: string;
    };
    ITransferTransaction: {
        description: string;
        type: string;
        properties: {
            type: {
                type: string;
                enum: number[];
            };
            recipient: {
                type: string;
            };
            amount: {
                $ref: string;
            };
            attachment: {
                type: string[];
            };
            feeAssetId: {
                type: string[];
            };
            assetId: {
                type: string[];
            };
            timestamp: {
                type: string;
            };
            fee: {
                $ref: string;
            };
            version: {
                type: string;
            };
            chainId: {
                type: string;
            };
            proofs: {
                description: string;
                minItems: number;
                maxItems: number;
                type: string;
                items: {
                    type: string;
                };
            };
            senderPublicKey: {
                description: string;
                type: string;
            };
        };
        required: string[];
        definitions: {
            LONG: {
                type: string[];
            };
        };
        $schema: string;
        $id: string;
    };
    IReissueTransaction: {
        type: string;
        properties: {
            type: {
                type: string;
                enum: number[];
            };
            assetId: {
                type: string;
            };
            quantity: {
                $ref: string;
            };
            reissuable: {
                type: string;
            };
            timestamp: {
                type: string;
            };
            fee: {
                $ref: string;
            };
            version: {
                type: string;
            };
            chainId: {
                type: string;
            };
            feeAssetId: {
                type: string[];
            };
            proofs: {
                description: string;
                minItems: number;
                maxItems: number;
                type: string;
                items: {
                    type: string;
                };
            };
            senderPublicKey: {
                description: string;
                type: string;
            };
        };
        required: string[];
        definitions: {
            LONG: {
                type: string[];
            };
        };
        $schema: string;
        $id: string;
    };
    IBurnTransaction: {
        type: string;
        properties: {
            type: {
                type: string;
                enum: number[];
            };
            assetId: {
                type: string;
            };
            amount: {
                $ref: string;
            };
            timestamp: {
                type: string;
            };
            fee: {
                $ref: string;
            };
            version: {
                type: string;
            };
            chainId: {
                type: string;
            };
            feeAssetId: {
                type: string[];
            };
            proofs: {
                description: string;
                minItems: number;
                maxItems: number;
                type: string;
                items: {
                    type: string;
                };
            };
            senderPublicKey: {
                description: string;
                type: string;
            };
        };
        required: string[];
        definitions: {
            LONG: {
                type: string[];
            };
        };
        $schema: string;
        $id: string;
    };
    IExchangeTransaction: {
        type: string;
        properties: {
            type: {
                type: string;
                enum: number[];
            };
            order1: {
                $ref: string;
            };
            order2: {
                $ref: string;
            };
            price: {
                $ref: string;
            };
            amount: {
                $ref: string;
            };
            buyMatcherFee: {
                $ref: string;
            };
            sellMatcherFee: {
                $ref: string;
            };
            timestamp: {
                type: string;
            };
            fee: {
                $ref: string;
            };
            version: {
                type: string;
            };
            chainId: {
                type: string;
            };
            feeAssetId: {
                type: string[];
            };
            proofs: {
                description: string;
                minItems: number;
                maxItems: number;
                type: string;
                items: {
                    type: string;
                };
            };
            senderPublicKey: {
                description: string;
                type: string;
            };
        };
        required: string[];
        definitions: {
            "IOrder<string|number>": {
                type: string;
                properties: {
                    version: {
                        type: string;
                    };
                    orderType: {
                        enum: string[];
                        type: string;
                    };
                    assetPair: {
                        type: string;
                        properties: {
                            amountAsset: {
                                type: string[];
                            };
                            priceAsset: {
                                type: string[];
                            };
                        };
                        required: string[];
                    };
                    price: {
                        type: string[];
                    };
                    amount: {
                        type: string[];
                    };
                    timestamp: {
                        type: string;
                    };
                    expiration: {
                        type: string;
                    };
                    matcherFee: {
                        type: string;
                    };
                    matcherPublicKey: {
                        type: string;
                    };
                    proofs: {
                        description: string;
                        minItems: number;
                        maxItems: number;
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    senderPublicKey: {
                        description: string;
                        type: string;
                    };
                };
                required: string[];
            };
            LONG: {
                type: string[];
            };
        };
        $schema: string;
        $id: string;
    };
    ILeaseTransaction: {
        type: string;
        properties: {
            type: {
                type: string;
                enum: number[];
            };
            amount: {
                $ref: string;
            };
            recipient: {
                type: string;
            };
            timestamp: {
                type: string;
            };
            fee: {
                $ref: string;
            };
            version: {
                type: string;
            };
            chainId: {
                type: string;
            };
            feeAssetId: {
                type: string[];
            };
            proofs: {
                description: string;
                minItems: number;
                maxItems: number;
                type: string;
                items: {
                    type: string;
                };
            };
            senderPublicKey: {
                description: string;
                type: string;
            };
        };
        required: string[];
        definitions: {
            LONG: {
                type: string[];
            };
        };
        $schema: string;
        $id: string;
    };
    ICancelLeaseTransaction: {
        type: string;
        properties: {
            type: {
                type: string;
                enum: number[];
            };
            leaseId: {
                type: string;
            };
            timestamp: {
                type: string;
            };
            fee: {
                $ref: string;
            };
            version: {
                type: string;
            };
            chainId: {
                type: string;
            };
            feeAssetId: {
                type: string[];
            };
            proofs: {
                description: string;
                minItems: number;
                maxItems: number;
                type: string;
                items: {
                    type: string;
                };
            };
            senderPublicKey: {
                description: string;
                type: string;
            };
        };
        required: string[];
        definitions: {
            LONG: {
                type: string[];
            };
        };
        $schema: string;
        $id: string;
    };
    IMassTransferTransaction: {
        type: string;
        properties: {
            type: {
                type: string;
                enum: number[];
            };
            transfers: {
                type: string;
                items: {
                    $ref: string;
                };
            };
            attachment: {
                type: string[];
            };
            assetId: {
                type: string[];
            };
            timestamp: {
                type: string;
            };
            fee: {
                $ref: string;
            };
            version: {
                type: string;
            };
            chainId: {
                type: string;
            };
            feeAssetId: {
                type: string[];
            };
            proofs: {
                description: string;
                minItems: number;
                maxItems: number;
                type: string;
                items: {
                    type: string;
                };
            };
            senderPublicKey: {
                description: string;
                type: string;
            };
        };
        required: string[];
        definitions: {
            "IMassTransferItem<LONG>": {
                type: string;
                properties: {
                    recipient: {
                        type: string;
                    };
                    amount: {
                        $ref: string;
                    };
                };
                required: string[];
            };
            LONG: {
                type: string[];
            };
        };
        $schema: string;
        $id: string;
    };
    ISetScriptTransaction: {
        type: string;
        properties: {
            type: {
                type: string;
                enum: number[];
            };
            script: {
                description: string;
                type: string[];
            };
            timestamp: {
                type: string;
            };
            fee: {
                $ref: string;
            };
            version: {
                type: string;
            };
            chainId: {
                type: string;
            };
            feeAssetId: {
                type: string[];
            };
            proofs: {
                description: string;
                minItems: number;
                maxItems: number;
                type: string;
                items: {
                    type: string;
                };
            };
            senderPublicKey: {
                description: string;
                type: string;
            };
        };
        required: string[];
        definitions: {
            LONG: {
                type: string[];
            };
        };
        $schema: string;
        $id: string;
    };
    ISetAssetScriptTransaction: {
        type: string;
        properties: {
            type: {
                type: string;
                enum: number[];
            };
            assetId: {
                type: string;
            };
            script: {
                description: string;
                type: string[];
            };
            timestamp: {
                type: string;
            };
            fee: {
                $ref: string;
            };
            version: {
                type: string;
            };
            chainId: {
                type: string;
            };
            feeAssetId: {
                type: string[];
            };
            proofs: {
                description: string;
                minItems: number;
                maxItems: number;
                type: string;
                items: {
                    type: string;
                };
            };
            senderPublicKey: {
                description: string;
                type: string;
            };
        };
        required: string[];
        definitions: {
            LONG: {
                type: string[];
            };
        };
        $schema: string;
        $id: string;
    };
    IDataTransaction: {
        type: string;
        properties: {
            type: {
                type: string;
                enum: number[];
            };
            data: {
                type: string;
                items: {
                    anyOf: ({
                        allOf: ({
                            $ref: string;
                            type?: undefined;
                            properties?: undefined;
                            required?: undefined;
                        } | {
                            type: string;
                            properties: {
                                key: {
                                    type: string;
                                };
                            };
                            required: string[];
                            $ref?: undefined;
                        })[];
                        type?: undefined;
                        properties?: undefined;
                        required?: undefined;
                    } | {
                        type: string;
                        properties: {
                            type: {
                                type: string;
                            };
                            value: {
                                type: string;
                            };
                            key: {
                                type: string;
                            };
                        };
                        required: string[];
                        allOf?: undefined;
                    })[];
                };
            };
            timestamp: {
                type: string;
            };
            fee: {
                $ref: string;
            };
            version: {
                type: string;
            };
            chainId: {
                type: string;
            };
            feeAssetId: {
                type: string[];
            };
            proofs: {
                description: string;
                minItems: number;
                maxItems: number;
                type: string;
                items: {
                    type: string;
                };
            };
            senderPublicKey: {
                description: string;
                type: string;
            };
        };
        required: string[];
        definitions: {
            IBooleanData: {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    value: {
                        type: string;
                    };
                };
                required: string[];
            };
            "IIntegerData<string|number>": {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    value: {
                        type: string[];
                    };
                };
                required: string[];
            };
            IStringData: {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    value: {
                        type: string;
                    };
                };
                required: string[];
            };
            IBinaryData: {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    value: {
                        type: string;
                    };
                };
                required: string[];
            };
            LONG: {
                type: string[];
            };
        };
        $schema: string;
        $id: string;
    };
    ISponsorshipTransaction: {
        type: string;
        properties: {
            type: {
                type: string;
                enum: number[];
            };
            minSponsoredAssetFee: {
                $ref: string;
                description: string;
            };
            assetId: {
                description: string;
                type: string;
            };
            timestamp: {
                type: string;
            };
            fee: {
                $ref: string;
            };
            version: {
                type: string;
            };
            chainId: {
                type: string;
            };
            feeAssetId: {
                type: string[];
            };
            proofs: {
                description: string;
                minItems: number;
                maxItems: number;
                type: string;
                items: {
                    type: string;
                };
            };
            senderPublicKey: {
                description: string;
                type: string;
            };
        };
        required: string[];
        definitions: {
            LONG: {
                type: string[];
            };
        };
        $schema: string;
        $id: string;
    };
    IInvokeScriptTransaction: {
        type: string;
        properties: {
            type: {
                type: string;
                enum: number[];
            };
            dApp: {
                type: string;
            };
            feeAssetId: {
                type: string[];
            };
            call: {
                $ref: string;
            };
            payment: {
                type: string;
                items: {
                    $ref: string;
                };
            };
            timestamp: {
                type: string;
            };
            fee: {
                $ref: string;
            };
            version: {
                type: string;
            };
            chainId: {
                type: string;
            };
            proofs: {
                description: string;
                minItems: number;
                maxItems: number;
                type: string;
                items: {
                    type: string;
                };
            };
            senderPublicKey: {
                description: string;
                type: string;
            };
        };
        required: string[];
        definitions: {
            "IInvokeScriptCall<LONG>": {
                type: string;
                properties: {
                    function: {
                        description: string;
                        type: string;
                    };
                    args: {
                        description: string;
                        type: string;
                        items: {
                            anyOf: {
                                $ref: string;
                            }[];
                        };
                    };
                };
                required: string[];
            };
            IInvokeScriptCallStringArgument: {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    value: {
                        type: string;
                    };
                };
                required: string[];
            };
            IInvokeScriptCallBinaryArgument: {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    value: {
                        type: string;
                    };
                };
                required: string[];
            };
            IInvokeScriptCallBoolArgument: {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    value: {
                        type: string;
                    };
                };
                required: string[];
            };
            "IInvokeScriptCallIntegerArgument<LONG>": {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    value: {
                        $ref: string;
                    };
                };
                required: string[];
            };
            LONG: {
                type: string[];
            };
            "IInvokeScriptCallListArgument<LONG>": {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    value: {
                        type: string;
                        items: {
                            anyOf: {
                                $ref: string;
                            }[];
                        };
                    };
                };
                required: string[];
            };
            "IInvokeScriptPayment<string|number>": {
                type: string;
                properties: {
                    assetId: {
                        type: string[];
                    };
                    amount: {
                        type: string[];
                    };
                };
                required: string[];
            };
        };
        $schema: string;
        $id: string;
    };
    IUpdateAssetInfoTransaction: {
        type: string;
        properties: {
            type: {
                type: string;
                enum: number[];
            };
            assetId: {
                type: string;
            };
            name: {
                type: string;
            };
            description: {
                type: string;
            };
            timestamp: {
                type: string;
            };
            fee: {
                $ref: string;
            };
            version: {
                type: string;
            };
            chainId: {
                type: string;
            };
            feeAssetId: {
                type: string[];
            };
            proofs: {
                description: string;
                minItems: number;
                maxItems: number;
                type: string;
                items: {
                    type: string;
                };
            };
            senderPublicKey: {
                description: string;
                type: string;
            };
        };
        required: string[];
        definitions: {
            LONG: {
                type: string[];
            };
        };
        $schema: string;
        $id: string;
    };
    IOrder: {
        type: string;
        properties: {
            version: {
                type: string;
            };
            orderType: {
                enum: string[];
                type: string;
            };
            assetPair: {
                type: string;
                properties: {
                    amountAsset: {
                        type: string[];
                    };
                    priceAsset: {
                        type: string[];
                    };
                };
                required: string[];
            };
            price: {
                $ref: string;
            };
            amount: {
                $ref: string;
            };
            timestamp: {
                type: string;
            };
            expiration: {
                type: string;
            };
            matcherFee: {
                type: string;
            };
            matcherPublicKey: {
                type: string;
            };
            proofs: {
                description: string;
                minItems: number;
                maxItems: number;
                type: string;
                items: {
                    type: string;
                };
            };
            senderPublicKey: {
                description: string;
                type: string;
            };
        };
        required: string[];
        definitions: {
            LONG: {
                type: string[];
            };
        };
        $schema: string;
        $id: string;
    };
    IOrderParams: {
        type: string;
        properties: {
            matcherPublicKey: {
                type: string;
            };
            price: {
                $ref: string;
            };
            amount: {
                $ref: string;
            };
            orderType: {
                enum: string[];
                type: string;
            };
            amountAsset: {
                type: string[];
            };
            priceAsset: {
                type: string[];
            };
            senderPublicKey: {
                type: string;
            };
            matcherFee: {
                type: string;
            };
            timestamp: {
                type: string;
            };
            expiration: {
                type: string;
            };
            matcherFeeAssetId: {
                type: string[];
            };
        };
        required: string[];
        definitions: {
            LONG: {
                type: string[];
            };
        };
        $schema: string;
        $id: string;
    };
    ICancelOrder: {
        description: string;
        type: string;
        properties: {
            sender: {
                type: string;
            };
            orderId: {
                type: string;
            };
            signature: {
                type: string;
            };
            hash: {
                type: string;
            };
        };
        required: string[];
        $schema: string;
        $id: string;
        definitions: {
            LONG: {
                type: string[];
            };
        };
    };
    ICancelOrderParams: {
        type: string;
        properties: {
            orderId: {
                type: string;
            };
            signature: {
                type: string;
            };
            senderPublicKey: {
                type: string;
            };
        };
        required: string[];
        $schema: string;
        $id: string;
        definitions: {
            LONG: {
                type: string[];
            };
        };
    };
    IAliasParams: {
        type: string;
        properties: {
            alias: {
                type: string;
            };
            version: {
                description: string;
                type: string;
            };
            fee: {
                description: string;
                $ref: string;
            };
            additionalFee: {
                description: string;
                type: string;
            };
            senderPublicKey: {
                description: string;
                type: string;
            };
            timestamp: {
                description: string;
                type: string;
            };
            chainId: {
                description: string;
                type: string[];
            };
        };
        required: string[];
        definitions: {
            LONG: {
                type: string[];
            };
        };
        $schema: string;
        $id: string;
    };
    IIssueParams: {
        type: string;
        properties: {
            name: {
                minLength: number;
                maxLength: number;
                type: string;
            };
            description: {
                maxLength: number;
                type: string;
            };
            quantity: {
                $ref: string;
            };
            decimals: {
                type: string;
            };
            reissuable: {
                type: string;
            };
            script: {
                type: string;
            };
            version: {
                description: string;
                type: string;
            };
            fee: {
                description: string;
                $ref: string;
            };
            additionalFee: {
                description: string;
                type: string;
            };
            senderPublicKey: {
                description: string;
                type: string;
            };
            timestamp: {
                description: string;
                type: string;
            };
            chainId: {
                description: string;
                type: string[];
            };
        };
        required: string[];
        definitions: {
            LONG: {
                type: string[];
            };
        };
        $schema: string;
        $id: string;
    };
    ITransferParams: {
        type: string;
        properties: {
            recipient: {
                description: string;
                type: string;
            };
            amount: {
                $ref: string;
            };
            assetId: {
                type: string[];
            };
            feeAssetId: {
                description: string;
                type: string[];
            };
            attachment: {
                description: string;
                type: string[];
            };
            version: {
                description: string;
                type: string;
            };
            fee: {
                description: string;
                $ref: string;
            };
            additionalFee: {
                description: string;
                type: string;
            };
            senderPublicKey: {
                description: string;
                type: string;
            };
            timestamp: {
                description: string;
                type: string;
            };
            chainId: {
                description: string;
                type: string[];
            };
        };
        required: string[];
        definitions: {
            LONG: {
                type: string[];
            };
        };
        $schema: string;
        $id: string;
    };
    IReissueParams: {
        type: string;
        properties: {
            assetId: {
                type: string;
            };
            quantity: {
                $ref: string;
            };
            reissuable: {
                type: string;
            };
            version: {
                description: string;
                type: string;
            };
            fee: {
                description: string;
                $ref: string;
            };
            additionalFee: {
                description: string;
                type: string;
            };
            senderPublicKey: {
                description: string;
                type: string;
            };
            timestamp: {
                description: string;
                type: string;
            };
            chainId: {
                description: string;
                type: string[];
            };
        };
        required: string[];
        definitions: {
            LONG: {
                type: string[];
            };
        };
        $schema: string;
        $id: string;
    };
    IBurnParams: {
        type: string;
        properties: {
            assetId: {
                type: string;
            };
            amount: {
                $ref: string;
            };
            version: {
                description: string;
                type: string;
            };
            fee: {
                description: string;
                $ref: string;
            };
            additionalFee: {
                description: string;
                type: string;
            };
            senderPublicKey: {
                description: string;
                type: string;
            };
            timestamp: {
                description: string;
                type: string;
            };
            chainId: {
                description: string;
                type: string[];
            };
        };
        required: string[];
        definitions: {
            LONG: {
                type: string[];
            };
        };
        $schema: string;
        $id: string;
    };
    ILeaseParams: {
        type: string;
        properties: {
            recipient: {
                type: string;
            };
            amount: {
                $ref: string;
            };
            version: {
                description: string;
                type: string;
            };
            fee: {
                description: string;
                $ref: string;
            };
            additionalFee: {
                description: string;
                type: string;
            };
            senderPublicKey: {
                description: string;
                type: string;
            };
            timestamp: {
                description: string;
                type: string;
            };
            chainId: {
                description: string;
                type: string[];
            };
        };
        required: string[];
        definitions: {
            LONG: {
                type: string[];
            };
        };
        $schema: string;
        $id: string;
    };
    ICancelLeaseParams: {
        type: string;
        properties: {
            leaseId: {
                type: string;
            };
            version: {
                description: string;
                type: string;
            };
            fee: {
                description: string;
                $ref: string;
            };
            additionalFee: {
                description: string;
                type: string;
            };
            senderPublicKey: {
                description: string;
                type: string;
            };
            timestamp: {
                description: string;
                type: string;
            };
            chainId: {
                description: string;
                type: string[];
            };
        };
        required: string[];
        definitions: {
            LONG: {
                type: string[];
            };
        };
        $schema: string;
        $id: string;
    };
    IMassTransferParams: {
        type: string;
        properties: {
            transfers: {
                type: string;
                items: {
                    $ref: string;
                };
            };
            attachment: {
                description: string;
                type: string[];
            };
            assetId: {
                type: string[];
            };
            version: {
                description: string;
                type: string;
            };
            fee: {
                description: string;
                $ref: string;
            };
            additionalFee: {
                description: string;
                type: string;
            };
            senderPublicKey: {
                description: string;
                type: string;
            };
            timestamp: {
                description: string;
                type: string;
            };
            chainId: {
                description: string;
                type: string[];
            };
        };
        required: string[];
        definitions: {
            "IMassTransferItem<string|number>": {
                type: string;
                properties: {
                    recipient: {
                        type: string;
                    };
                    amount: {
                        type: string[];
                    };
                };
                required: string[];
            };
            LONG: {
                type: string[];
            };
        };
        $schema: string;
        $id: string;
    };
    ISetScriptParams: {
        type: string;
        properties: {
            script: {
                description: string;
                type: string[];
            };
            version: {
                description: string;
                type: string;
            };
            fee: {
                description: string;
                $ref: string;
            };
            additionalFee: {
                description: string;
                type: string;
            };
            senderPublicKey: {
                description: string;
                type: string;
            };
            timestamp: {
                description: string;
                type: string;
            };
            chainId: {
                description: string;
                type: string[];
            };
        };
        required: string[];
        definitions: {
            LONG: {
                type: string[];
            };
        };
        $schema: string;
        $id: string;
    };
    ISetAssetScriptParams: {
        type: string;
        properties: {
            script: {
                description: string;
                type: string;
            };
            assetId: {
                type: string;
            };
            version: {
                description: string;
                type: string;
            };
            fee: {
                description: string;
                $ref: string;
            };
            additionalFee: {
                description: string;
                type: string;
            };
            senderPublicKey: {
                description: string;
                type: string;
            };
            timestamp: {
                description: string;
                type: string;
            };
            chainId: {
                description: string;
                type: string[];
            };
        };
        required: string[];
        definitions: {
            LONG: {
                type: string[];
            };
        };
        $schema: string;
        $id: string;
    };
    IDataParams: {
        type: string;
        properties: {
            data: {
                type: string;
                items: {
                    anyOf: ({
                        allOf: ({
                            $ref: string;
                            type?: undefined;
                            properties?: undefined;
                            required?: undefined;
                        } | {
                            type: string;
                            properties: {
                                key: {
                                    type: string;
                                };
                            };
                            required: string[];
                            $ref?: undefined;
                        })[];
                        type?: undefined;
                        properties?: undefined;
                        required?: undefined;
                        $ref?: undefined;
                    } | {
                        type: string;
                        properties: {
                            type: {
                                type: string;
                            };
                            value: {
                                type: string;
                            };
                            key: {
                                type: string;
                            };
                        };
                        required: string[];
                        allOf?: undefined;
                        $ref?: undefined;
                    } | {
                        $ref: string;
                        allOf?: undefined;
                        type?: undefined;
                        properties?: undefined;
                        required?: undefined;
                    })[];
                };
            };
            version: {
                description: string;
                type: string;
            };
            fee: {
                description: string;
                $ref: string;
            };
            additionalFee: {
                description: string;
                type: string;
            };
            senderPublicKey: {
                description: string;
                type: string;
            };
            timestamp: {
                description: string;
                type: string;
            };
            chainId: {
                description: string;
                type: string[];
            };
        };
        required: string[];
        definitions: {
            IBooleanData: {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    value: {
                        type: string;
                    };
                };
                required: string[];
            };
            "IIntegerData<string|number>": {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    value: {
                        type: string[];
                    };
                };
                required: string[];
            };
            IStringData: {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    value: {
                        type: string;
                    };
                };
                required: string[];
            };
            IBinaryData: {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    value: {
                        type: string;
                    };
                };
                required: string[];
            };
            ITypelessDataEntry: {
                type: string;
                properties: {
                    key: {
                        type: string;
                    };
                    value: {
                        anyOf: ({
                            description: string;
                            type: string;
                            additionalProperties: boolean;
                            patternProperties: {
                                "^[0-9]+$": {
                                    type: string;
                                };
                            };
                            items?: undefined;
                        } | {
                            type: string;
                            items: {
                                type: string;
                            };
                            description?: undefined;
                            additionalProperties?: undefined;
                            patternProperties?: undefined;
                        } | {
                            type: string[];
                            description?: undefined;
                            additionalProperties?: undefined;
                            patternProperties?: undefined;
                            items?: undefined;
                        })[];
                    };
                };
                required: string[];
            };
            LONG: {
                type: string[];
            };
        };
        $schema: string;
        $id: string;
    };
    ISponsorshipParams: {
        type: string;
        properties: {
            assetId: {
                description: string;
                type: string;
            };
            minSponsoredAssetFee: {
                $ref: string;
                description: string;
            };
            version: {
                description: string;
                type: string;
            };
            fee: {
                description: string;
                $ref: string;
            };
            additionalFee: {
                description: string;
                type: string;
            };
            senderPublicKey: {
                description: string;
                type: string;
            };
            timestamp: {
                description: string;
                type: string;
            };
            chainId: {
                description: string;
                type: string[];
            };
        };
        required: string[];
        definitions: {
            LONG: {
                type: string[];
            };
        };
        $schema: string;
        $id: string;
    };
    IInvokeScriptParams: {
        type: string;
        properties: {
            dApp: {
                type: string;
            };
            feeAssetId: {
                type: string[];
            };
            call: {
                type: string;
                properties: {
                    function: {
                        type: string;
                    };
                    args: {
                        type: string;
                        items: {
                            anyOf: {
                                $ref: string;
                            }[];
                        };
                    };
                };
                required: string[];
            };
            payment: {
                type: string;
                items: {
                    type: string;
                    properties: {
                        assetId: {
                            type: string[];
                        };
                        amount: {
                            $ref: string;
                        };
                    };
                    required: string[];
                };
            };
            version: {
                description: string;
                type: string;
            };
            fee: {
                description: string;
                $ref: string;
            };
            additionalFee: {
                description: string;
                type: string;
            };
            senderPublicKey: {
                description: string;
                type: string;
            };
            timestamp: {
                description: string;
                type: string;
            };
            chainId: {
                description: string;
                type: string[];
            };
        };
        required: string[];
        definitions: {
            IInvokeScriptCallStringArgument: {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    value: {
                        type: string;
                    };
                };
                required: string[];
            };
            IInvokeScriptCallBinaryArgument: {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    value: {
                        type: string;
                    };
                };
                required: string[];
            };
            IInvokeScriptCallBoolArgument: {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    value: {
                        type: string;
                    };
                };
                required: string[];
            };
            "IInvokeScriptCallIntegerArgument<LONG>": {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    value: {
                        $ref: string;
                    };
                };
                required: string[];
            };
            LONG: {
                type: string[];
            };
            "IInvokeScriptCallListArgument<LONG>": {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    value: {
                        type: string;
                        items: {
                            anyOf: {
                                $ref: string;
                            }[];
                        };
                    };
                };
                required: string[];
            };
        };
        $schema: string;
        $id: string;
    };
    IInvokeScriptPayment: {
        type: string;
        properties: {
            assetId: {
                type: string[];
            };
            amount: {
                $ref: string;
            };
        };
        required: string[];
        definitions: {
            LONG: {
                type: string[];
            };
        };
        $schema: string;
        $id: string;
    };
    IUpdateAssetInfoParams: {
        type: string;
        properties: {
            assetId: {
                description: string;
                type: string;
            };
            name: {
                description: string;
                type: string;
            };
            description: {
                description: string;
                type: string;
            };
            version: {
                description: string;
                type: string;
            };
            fee: {
                description: string;
                $ref: string;
            };
            additionalFee: {
                description: string;
                type: string;
            };
            senderPublicKey: {
                description: string;
                type: string;
            };
            timestamp: {
                description: string;
                type: string;
            };
            chainId: {
                description: string;
                type: string[];
            };
        };
        required: string[];
        definitions: {
            LONG: {
                type: string[];
            };
        };
        $schema: string;
        $id: string;
    };
    IInvokeScriptCall: {
        type: string;
        properties: {
            function: {
                description: string;
                type: string;
            };
            args: {
                description: string;
                type: string;
                items: {
                    anyOf: {
                        $ref: string;
                    }[];
                };
            };
        };
        required: string[];
        definitions: {
            IInvokeScriptCallStringArgument: {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    value: {
                        type: string;
                    };
                };
                required: string[];
            };
            IInvokeScriptCallBinaryArgument: {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    value: {
                        type: string;
                    };
                };
                required: string[];
            };
            IInvokeScriptCallBoolArgument: {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    value: {
                        type: string;
                    };
                };
                required: string[];
            };
            "IInvokeScriptCallIntegerArgument<LONG>": {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    value: {
                        $ref: string;
                    };
                };
                required: string[];
            };
            LONG: {
                type: string[];
            };
            "IInvokeScriptCallListArgument<LONG>": {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    value: {
                        type: string;
                        items: {
                            anyOf: {
                                $ref: string;
                            }[];
                        };
                    };
                };
                required: string[];
            };
        };
        $schema: string;
        $id: string;
    };
    INodeRequestOptions: {
        type: string;
        properties: {
            timeout: {
                type: string;
            };
            apiBase: {
                type: string;
            };
        };
        required: string[];
        $schema: string;
        $id: string;
        definitions: {
            LONG: {
                type: string[];
            };
        };
    };
    TSeedTypes: {
        anyOf: ({
            type: string;
            additionalProperties: boolean;
            patternProperties: {
                "^[0-9]+$": {
                    type: string;
                };
            };
            properties?: undefined;
            required?: undefined;
            items?: undefined;
        } | {
            type: string;
            properties: {
                privateKey: {
                    type: string;
                };
            };
            required: string[];
            additionalProperties?: undefined;
            patternProperties?: undefined;
            items?: undefined;
        } | {
            type: string;
            items: {
                anyOf: ({
                    type: string;
                    properties: {
                        privateKey: {
                            type: string;
                        };
                    };
                    required: string[];
                } | {
                    type: string[];
                    properties?: undefined;
                    required?: undefined;
                })[];
            };
            additionalProperties?: undefined;
            patternProperties?: undefined;
            properties?: undefined;
            required?: undefined;
        } | {
            type: string;
            additionalProperties?: undefined;
            patternProperties?: undefined;
            properties?: undefined;
            required?: undefined;
            items?: undefined;
        })[];
        $schema: string;
        $id: string;
        definitions: {
            LONG: {
                type: string[];
            };
        };
    };
    WithId: {
        type: string;
        properties: {
            id: {
                description: string;
                type: string;
            };
        };
        required: string[];
        $schema: string;
        $id: string;
        definitions: {
            LONG: {
                type: string[];
            };
        };
    };
    WithTxType: {
        type: string;
        properties: {
            type: {
                enum: number[];
                type: string;
            };
        };
        required: string[];
        $schema: string;
        $id: string;
        definitions: {
            LONG: {
                type: string[];
            };
        };
    };
    TTxOrTxArray: {
        anyOf: ({
            $ref: string;
            type?: undefined;
            items?: undefined;
        } | {
            type: string;
            items: {
                anyOf: {
                    $ref: string;
                }[];
            };
            $ref?: undefined;
        })[];
        definitions: {
            "IAliasTransaction<string|number>": {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: number[];
                    };
                    alias: {
                        type: string;
                    };
                    timestamp: {
                        type: string;
                    };
                    fee: {
                        type: string[];
                    };
                    version: {
                        type: string;
                    };
                    chainId: {
                        type: string;
                    };
                    feeAssetId: {
                        type: string[];
                    };
                    proofs: {
                        description: string;
                        minItems: number;
                        maxItems: number;
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    senderPublicKey: {
                        description: string;
                        type: string;
                    };
                };
                required: string[];
            };
            "IIssueTransaction<string|number>": {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: number[];
                    };
                    name: {
                        minLength: number;
                        maxLength: number;
                        type: string;
                    };
                    description: {
                        maxLength: number;
                        type: string;
                    };
                    decimals: {
                        type: string;
                    };
                    quantity: {
                        type: string[];
                    };
                    reissuable: {
                        type: string;
                    };
                    script: {
                        type: string;
                    };
                    timestamp: {
                        type: string;
                    };
                    fee: {
                        type: string[];
                    };
                    version: {
                        type: string;
                    };
                    chainId: {
                        type: string;
                    };
                    feeAssetId: {
                        type: string[];
                    };
                    proofs: {
                        description: string;
                        minItems: number;
                        maxItems: number;
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    senderPublicKey: {
                        description: string;
                        type: string;
                    };
                };
                required: string[];
            };
            "ITransferTransaction<string|number>": {
                description: string;
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: number[];
                    };
                    recipient: {
                        type: string;
                    };
                    amount: {
                        type: string[];
                    };
                    attachment: {
                        type: string[];
                    };
                    feeAssetId: {
                        type: string[];
                    };
                    assetId: {
                        type: string[];
                    };
                    timestamp: {
                        type: string;
                    };
                    fee: {
                        type: string[];
                    };
                    version: {
                        type: string;
                    };
                    chainId: {
                        type: string;
                    };
                    proofs: {
                        description: string;
                        minItems: number;
                        maxItems: number;
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    senderPublicKey: {
                        description: string;
                        type: string;
                    };
                };
                required: string[];
            };
            "IReissueTransaction<string|number>": {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: number[];
                    };
                    assetId: {
                        type: string;
                    };
                    quantity: {
                        type: string[];
                    };
                    reissuable: {
                        type: string;
                    };
                    timestamp: {
                        type: string;
                    };
                    fee: {
                        type: string[];
                    };
                    version: {
                        type: string;
                    };
                    chainId: {
                        type: string;
                    };
                    feeAssetId: {
                        type: string[];
                    };
                    proofs: {
                        description: string;
                        minItems: number;
                        maxItems: number;
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    senderPublicKey: {
                        description: string;
                        type: string;
                    };
                };
                required: string[];
            };
            "IBurnTransaction<string|number>": {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: number[];
                    };
                    assetId: {
                        type: string;
                    };
                    amount: {
                        type: string[];
                    };
                    timestamp: {
                        type: string;
                    };
                    fee: {
                        type: string[];
                    };
                    version: {
                        type: string;
                    };
                    chainId: {
                        type: string;
                    };
                    feeAssetId: {
                        type: string[];
                    };
                    proofs: {
                        description: string;
                        minItems: number;
                        maxItems: number;
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    senderPublicKey: {
                        description: string;
                        type: string;
                    };
                };
                required: string[];
            };
            "ILeaseTransaction<string|number>": {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: number[];
                    };
                    amount: {
                        type: string[];
                    };
                    recipient: {
                        type: string;
                    };
                    timestamp: {
                        type: string;
                    };
                    fee: {
                        type: string[];
                    };
                    version: {
                        type: string;
                    };
                    chainId: {
                        type: string;
                    };
                    feeAssetId: {
                        type: string[];
                    };
                    proofs: {
                        description: string;
                        minItems: number;
                        maxItems: number;
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    senderPublicKey: {
                        description: string;
                        type: string;
                    };
                };
                required: string[];
            };
            "IExchangeTransaction<string|number>": {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: number[];
                    };
                    order1: {
                        $ref: string;
                    };
                    order2: {
                        $ref: string;
                    };
                    price: {
                        type: string[];
                    };
                    amount: {
                        type: string[];
                    };
                    buyMatcherFee: {
                        type: string[];
                    };
                    sellMatcherFee: {
                        type: string[];
                    };
                    timestamp: {
                        type: string;
                    };
                    fee: {
                        type: string[];
                    };
                    version: {
                        type: string;
                    };
                    chainId: {
                        type: string;
                    };
                    feeAssetId: {
                        type: string[];
                    };
                    proofs: {
                        description: string;
                        minItems: number;
                        maxItems: number;
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    senderPublicKey: {
                        description: string;
                        type: string;
                    };
                };
                required: string[];
            };
            "IOrder<string|number>": {
                type: string;
                properties: {
                    version: {
                        type: string;
                    };
                    orderType: {
                        enum: string[];
                        type: string;
                    };
                    assetPair: {
                        type: string;
                        properties: {
                            amountAsset: {
                                type: string[];
                            };
                            priceAsset: {
                                type: string[];
                            };
                        };
                        required: string[];
                    };
                    price: {
                        type: string[];
                    };
                    amount: {
                        type: string[];
                    };
                    timestamp: {
                        type: string;
                    };
                    expiration: {
                        type: string;
                    };
                    matcherFee: {
                        type: string;
                    };
                    matcherPublicKey: {
                        type: string;
                    };
                    proofs: {
                        description: string;
                        minItems: number;
                        maxItems: number;
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    senderPublicKey: {
                        description: string;
                        type: string;
                    };
                };
                required: string[];
            };
            "ICancelLeaseTransaction<string|number>": {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: number[];
                    };
                    leaseId: {
                        type: string;
                    };
                    timestamp: {
                        type: string;
                    };
                    fee: {
                        type: string[];
                    };
                    version: {
                        type: string;
                    };
                    chainId: {
                        type: string;
                    };
                    feeAssetId: {
                        type: string[];
                    };
                    proofs: {
                        description: string;
                        minItems: number;
                        maxItems: number;
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    senderPublicKey: {
                        description: string;
                        type: string;
                    };
                };
                required: string[];
            };
            "IMassTransferTransaction<string|number>": {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: number[];
                    };
                    transfers: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                    };
                    attachment: {
                        type: string[];
                    };
                    assetId: {
                        type: string[];
                    };
                    timestamp: {
                        type: string;
                    };
                    fee: {
                        type: string[];
                    };
                    version: {
                        type: string;
                    };
                    chainId: {
                        type: string;
                    };
                    feeAssetId: {
                        type: string[];
                    };
                    proofs: {
                        description: string;
                        minItems: number;
                        maxItems: number;
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    senderPublicKey: {
                        description: string;
                        type: string;
                    };
                };
                required: string[];
            };
            "IMassTransferItem<string|number>": {
                type: string;
                properties: {
                    recipient: {
                        type: string;
                    };
                    amount: {
                        type: string[];
                    };
                };
                required: string[];
            };
            "ISetScriptTransaction<string|number>": {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: number[];
                    };
                    script: {
                        description: string;
                        type: string[];
                    };
                    timestamp: {
                        type: string;
                    };
                    fee: {
                        type: string[];
                    };
                    version: {
                        type: string;
                    };
                    chainId: {
                        type: string;
                    };
                    feeAssetId: {
                        type: string[];
                    };
                    proofs: {
                        description: string;
                        minItems: number;
                        maxItems: number;
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    senderPublicKey: {
                        description: string;
                        type: string;
                    };
                };
                required: string[];
            };
            "ISponsorshipTransaction<string|number>": {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: number[];
                    };
                    minSponsoredAssetFee: {
                        description: string;
                        type: string[];
                    };
                    assetId: {
                        description: string;
                        type: string;
                    };
                    timestamp: {
                        type: string;
                    };
                    fee: {
                        type: string[];
                    };
                    version: {
                        type: string;
                    };
                    chainId: {
                        type: string;
                    };
                    feeAssetId: {
                        type: string[];
                    };
                    proofs: {
                        description: string;
                        minItems: number;
                        maxItems: number;
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    senderPublicKey: {
                        description: string;
                        type: string;
                    };
                };
                required: string[];
            };
            "IDataTransaction<string|number>": {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: number[];
                    };
                    data: {
                        type: string;
                        items: {
                            anyOf: ({
                                allOf: ({
                                    $ref: string;
                                    type?: undefined;
                                    properties?: undefined;
                                    required?: undefined;
                                } | {
                                    type: string;
                                    properties: {
                                        key: {
                                            type: string;
                                        };
                                    };
                                    required: string[];
                                    $ref?: undefined;
                                })[];
                                type?: undefined;
                                properties?: undefined;
                                required?: undefined;
                            } | {
                                type: string;
                                properties: {
                                    type: {
                                        type: string;
                                    };
                                    value: {
                                        type: string;
                                    };
                                    key: {
                                        type: string;
                                    };
                                };
                                required: string[];
                                allOf?: undefined;
                            })[];
                        };
                    };
                    timestamp: {
                        type: string;
                    };
                    fee: {
                        type: string[];
                    };
                    version: {
                        type: string;
                    };
                    chainId: {
                        type: string;
                    };
                    feeAssetId: {
                        type: string[];
                    };
                    proofs: {
                        description: string;
                        minItems: number;
                        maxItems: number;
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    senderPublicKey: {
                        description: string;
                        type: string;
                    };
                };
                required: string[];
            };
            IBooleanData: {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    value: {
                        type: string;
                    };
                };
                required: string[];
            };
            "IIntegerData<string|number>": {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    value: {
                        type: string[];
                    };
                };
                required: string[];
            };
            IStringData: {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    value: {
                        type: string;
                    };
                };
                required: string[];
            };
            IBinaryData: {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    value: {
                        type: string;
                    };
                };
                required: string[];
            };
            "ISetAssetScriptTransaction<string|number>": {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: number[];
                    };
                    assetId: {
                        type: string;
                    };
                    script: {
                        description: string;
                        type: string[];
                    };
                    timestamp: {
                        type: string;
                    };
                    fee: {
                        type: string[];
                    };
                    version: {
                        type: string;
                    };
                    chainId: {
                        type: string;
                    };
                    feeAssetId: {
                        type: string[];
                    };
                    proofs: {
                        description: string;
                        minItems: number;
                        maxItems: number;
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    senderPublicKey: {
                        description: string;
                        type: string;
                    };
                };
                required: string[];
            };
            "IInvokeScriptTransaction<string|number>": {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: number[];
                    };
                    dApp: {
                        type: string;
                    };
                    feeAssetId: {
                        type: string[];
                    };
                    call: {
                        $ref: string;
                    };
                    payment: {
                        type: string;
                        items: {
                            $ref: string;
                        };
                    };
                    timestamp: {
                        type: string;
                    };
                    fee: {
                        type: string[];
                    };
                    version: {
                        type: string;
                    };
                    chainId: {
                        type: string;
                    };
                    proofs: {
                        description: string;
                        minItems: number;
                        maxItems: number;
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    senderPublicKey: {
                        description: string;
                        type: string;
                    };
                };
                required: string[];
            };
            "IInvokeScriptCall<string|number>": {
                type: string;
                properties: {
                    function: {
                        description: string;
                        type: string;
                    };
                    args: {
                        description: string;
                        type: string;
                        items: {
                            anyOf: {
                                $ref: string;
                            }[];
                        };
                    };
                };
                required: string[];
            };
            IInvokeScriptCallStringArgument: {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    value: {
                        type: string;
                    };
                };
                required: string[];
            };
            IInvokeScriptCallBinaryArgument: {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    value: {
                        type: string;
                    };
                };
                required: string[];
            };
            IInvokeScriptCallBoolArgument: {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    value: {
                        type: string;
                    };
                };
                required: string[];
            };
            "IInvokeScriptCallIntegerArgument<string|number>": {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    value: {
                        type: string[];
                    };
                };
                required: string[];
            };
            "IInvokeScriptCallListArgument<string|number>": {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: string[];
                    };
                    value: {
                        type: string;
                        items: {
                            anyOf: {
                                $ref: string;
                            }[];
                        };
                    };
                };
                required: string[];
            };
            "IInvokeScriptPayment<string|number>": {
                type: string;
                properties: {
                    assetId: {
                        type: string[];
                    };
                    amount: {
                        type: string[];
                    };
                };
                required: string[];
            };
            "IUpdateAssetInfoTransaction<string|number>": {
                type: string;
                properties: {
                    type: {
                        type: string;
                        enum: number[];
                    };
                    assetId: {
                        type: string;
                    };
                    name: {
                        type: string;
                    };
                    description: {
                        type: string;
                    };
                    timestamp: {
                        type: string;
                    };
                    fee: {
                        type: string[];
                    };
                    version: {
                        type: string;
                    };
                    chainId: {
                        type: string;
                    };
                    feeAssetId: {
                        type: string[];
                    };
                    proofs: {
                        description: string;
                        minItems: number;
                        maxItems: number;
                        type: string;
                        items: {
                            type: string;
                        };
                    };
                    senderPublicKey: {
                        description: string;
                        type: string;
                    };
                };
                required: string[];
            };
            LONG: {
                type: string[];
            };
        };
        $schema: string;
        $id: string;
    };
};
export default _default;
