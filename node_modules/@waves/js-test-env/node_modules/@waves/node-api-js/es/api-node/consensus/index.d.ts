import { TLong } from '../../interface';
/**
 * GET /consensus/generatingbalance/{address}
 * Generating balance
 * @param base
 * @param address
 */
export declare function fetchGeneratingBalance(base: string, address: string): Promise<IGeneratingBalance<TLong>>;
/**
 * GET /consensus/basetarget
 * Base target last
 * @param base
 */
export declare function fetchBasetarget(base: string): Promise<IBasetarget>;
/**
 * GET /consensus/algo
 * Consensus algo
 * @param base
 */
export declare function fetchConsensusAlgo(base: string): Promise<IConsensusAlgo>;
/**
 * GET /consensus/generationsignature/{blockId}
 * Generation signature
 * @param base
 * @param blockId
 */
export declare function fetchGenerationSignatureBlockId(base: string, blockId: string, options?: RequestInit): Promise<IGeneraationSignatureBlockId>;
/**
 * GET /consensus/basetarget/{blockId}
 * Base target
 * @param base
 * @param blockId
 */
export declare function fetchBasetargetBlockId(base: string, blockId: string, options?: RequestInit): Promise<IBaseTargetBlockId>;
export interface IGeneratingBalance<LONG> {
    address: string;
    balance: LONG;
}
export interface IBasetarget {
    baseTarget: number;
    score: string;
}
export interface IConsensusAlgo {
    consensusAlgo: string;
}
export interface IGeneraationSignatureBlockId {
    generationSignature: string;
}
export interface IBaseTargetBlockId {
    baseTarget: number;
}
export interface IGenerationSignature {
    generationSignature: string;
}
