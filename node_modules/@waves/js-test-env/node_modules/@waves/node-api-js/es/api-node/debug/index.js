import request from '../../tools/request';
import query from '../../tools/query';
/**
 * Waves balance history
 * @param base
 * @param address
 */
export function fetchBalanceHistory(base, address, options = Object.create(null)) {
    return request({
        base,
        url: `/debug/balances/history/${address}`,
        options
    });
}
/**
 * Get list of transactions with state changes where specified address has been involved
 * @param base
 * @param address
 * @param limit
 * @param after
 */
export function fetchStateChangesByAddress(base, address, limit, after, options = Object.create(null)) {
    return request({
        base,
        url: `/debug/stateChanges/address/${address}/limit/${limit}${query({ after })}`,
        options
    });
}
/**
 * Get invokeScript transaction state changes
 * @param base
 * @param txId
 */
export function fetchStateChangesByTxId(base, txId, options = Object.create(null)) {
    return request({
        base,
        url: `/debug/stateChanges/info/${txId}`,
        options
    });
}
// @TODO need API key:
// GET /debug/stateWaves/{height}
// POST /debug/rollback
// DELETE /debug/rollback-to/{id}
// GET /debug/portfolios/{address}
// GET /debug/minerInfo
// GET /debug/historyInfo
// GET /debug/historyInfo
// GET /debug/info
// POST /debug/validate
// GET /debug/blocks/{howMany}
// POST /debug/blacklist
// POST /debug/print
// GET /debug/state
//# sourceMappingURL=index.js.map