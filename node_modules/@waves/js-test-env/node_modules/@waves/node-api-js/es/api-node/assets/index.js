import request from '../../tools/request';
import { toArray } from '../../tools/utils';
export function fetchDetails(base, assetId, options = Object.create(null)) {
    const isOnce = !Array.isArray(assetId);
    return Promise.all(toArray(assetId).map(id => request({ base, url: `/assets/details/${id}`, options })))
        .then(list => isOnce ? list[0] : list);
}
/**
 * GET /assets/details
 * Provides detailed information about the given assets
 */
export function fetchAssetsDetails(base, assetIds, options = Object.create(null)) {
    const params = assetIds
        .map(assetId => `id=${assetId}`)
        .join('&');
    const query = assetIds.length ? `?${params}` : '';
    return request({ base, url: `/assets/details${query}`, options });
}
export function fetchAssetDistribution(base, assetId, height, limit, options = Object.create(null)) {
    return request({ base, url: `/assets/${assetId}/distribution/${height}/limit/${limit}`, options });
}
/**
 * TODO
 * GET /assets/{assetId}/distribution
 * Asset balance distribution
 */
export function fetchAssetsAddressLimit(base, address, limit, options = Object.create(null)) {
    return request({ base, url: `assets/nft/${address}/limit/${limit}`, options });
}
export function fetchAssetsBalance(base, address, options = Object.create(null)) {
    return request({ base, url: `/assets/balance/${address}`, options });
}
export function fetchBalanceAddressAssetId(base, address, assetId, options = Object.create(null)) {
    return request({ base, url: `/assets/balance/${address}/${assetId}`, options });
}
//# sourceMappingURL=index.js.map