/**
 * GET /peers/all
 * Peer list
 */
export declare function fetchAll(base: string, options?: RequestInit): Promise<IAllResponse>;
/**
 * GET /peers/connected
 * Connected peers list
 */
export declare function fetchConnected(base: string, options?: RequestInit): Promise<IAllResponse>;
/**
 * GET /peers/blacklisted
 * Blacklisted peers list
 */
export declare function fetchBlackListed(base: string, options?: RequestInit): Promise<Array<IBlackPeer>>;
/**
 * GET /peers/suspended
 * Suspended peers list
 */
export declare function fetchSuspended(base: string, options?: RequestInit): Promise<Array<ISuspendedPeer>>;
export interface IAllResponse {
    peers: Array<IPeerAllResponse | IPeerConnectedResponse>;
}
export interface IPeerAllResponse {
    address: string;
    lastSeen: number;
}
export interface IPeerConnectedResponse {
    address: string;
    declaredAddress: string;
    peerName: string;
    peerNonce: number;
    applicationName: string;
    applicationVersion: string;
}
export interface IBlackPeer extends ISuspendedPeer {
    reason: string;
}
export interface ISuspendedPeer {
    hostname: string;
    timestamp: number;
}
