(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["clientLogs"] = factory();
	else
		root["clientLogs"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/MessageKeeper.ts":
/*!******************************!*\
  !*** ./src/MessageKeeper.ts ***!
  \******************************/
/*! exports provided: MessageKeeper */
/*! exports used: MessageKeeper */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MessageKeeper; });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "./src/constants.ts");
/* harmony import */ var _utils_toHash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/toHash */ "./src/utils/toHash.ts");


var MessageKeeper = /** @class */ (function () {
    function MessageKeeper(maxLength) {
        this._messages = [];
        this._maxLength = maxLength;
    }
    MessageKeeper.prototype.push = function (message) {
        this._messages.push(message);
        if (this._messages.length > this._maxLength) {
            this._messages.splice(0, this._messages.length - this._maxLength);
        }
    };
    MessageKeeper.prototype.getMessages = function (options) {
        var _a, _b;
        var types = Object(_utils_toHash__WEBPACK_IMPORTED_MODULE_1__[/* toHash */ "a"])((_b = (_a = options) === null || _a === void 0 ? void 0 : _a.messageTypes, (_b !== null && _b !== void 0 ? _b : _constants__WEBPACK_IMPORTED_MODULE_0__[/* ALL_TYPES */ "a"])));
        return this._messages.filter(function (message) {
            return types[message.type];
        });
    };
    return MessageKeeper;
}());



/***/ }),

/***/ "./src/constants.ts":
/*!**************************!*\
  !*** ./src/constants.ts ***!
  \**************************/
/*! exports provided: ALL_TYPES, DEFAULT_MAKE_OPTIONS */
/*! exports used: ALL_TYPES, DEFAULT_MAKE_OPTIONS */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ALL_TYPES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return DEFAULT_MAKE_OPTIONS; });
var ALL_TYPES = ['info', 'log', 'warn', 'error'];
var DEFAULT_MAKE_OPTIONS = {
    keepMessageCount: 100,
    keepMessageTypes: ['error'],
    logMessageTypes: ['error'],
    namespace: undefined,
};


/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/*! exports provided: makeConsole, version, makeOptions, default */
/*! all exports used */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "makeConsole", function() { return makeConsole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "version", function() { return version; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "makeOptions", function() { return makeOptions; });
/* harmony import */ var _MessageKeeper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MessageKeeper */ "./src/MessageKeeper.ts");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ "./src/constants.ts");
/* harmony import */ var _utils_toHash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/toHash */ "./src/utils/toHash.ts");
/* harmony import */ var _utils_identity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/identity */ "./src/utils/identity.ts");
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __spreadArrays = (undefined && undefined.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};




var makeConsole = function (options) {
    var makeOptions = __assign(__assign({}, _constants__WEBPACK_IMPORTED_MODULE_1__[/* DEFAULT_MAKE_OPTIONS */ "b"]), ((options !== null && options !== void 0 ? options : {})));
    var keeper = new _MessageKeeper__WEBPACK_IMPORTED_MODULE_0__[/* MessageKeeper */ "a"](makeOptions.keepMessageCount);
    var logTypes = Object(_utils_toHash__WEBPACK_IMPORTED_MODULE_2__[/* toHash */ "a"])(makeOptions.logMessageTypes);
    var keepTypes = Object(_utils_toHash__WEBPACK_IMPORTED_MODULE_2__[/* toHash */ "a"])(makeOptions.keepMessageTypes);
    return _constants__WEBPACK_IMPORTED_MODULE_1__[/* ALL_TYPES */ "a"].reduce(function (methods, type) {
        var addNamespace = makeOptions.namespace != null
            ? function (args) { return __spreadArrays([makeOptions.namespace], args); }
            : _utils_identity__WEBPACK_IMPORTED_MODULE_3__[/* identity */ "a"];
        var setToConsole = logTypes[type] ? console[type] : _utils_identity__WEBPACK_IMPORTED_MODULE_3__[/* identity */ "a"];
        var setToKeeper = keepTypes[type]
            ? function (args) { return keeper.push({ type: type, args: args }); }
            : _utils_identity__WEBPACK_IMPORTED_MODULE_3__[/* identity */ "a"];
        methods[type] = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            var list = addNamespace(args);
            setToConsole.apply(void 0, list);
            setToKeeper(list);
        };
        return methods;
    }, {
        getMessages: function (options) {
            return keeper.getMessages(options);
        },
    });
};
var version =  true ? "1.0.0" : undefined;
function makeOptions(logLevel, namespace) {
    // eslint-disable-next-line default-case
    switch (logLevel) {
        case 'production':
            return __assign(__assign({}, _constants__WEBPACK_IMPORTED_MODULE_1__[/* DEFAULT_MAKE_OPTIONS */ "b"]), { keepMessageTypes: ['error'], logMessageTypes: [], namespace: namespace });
        case 'error':
            return __assign(__assign({}, _constants__WEBPACK_IMPORTED_MODULE_1__[/* DEFAULT_MAKE_OPTIONS */ "b"]), { keepMessageTypes: ['warn', 'error'], logMessageTypes: ['error'], namespace: namespace });
        case 'verbose':
            return __assign(__assign({}, _constants__WEBPACK_IMPORTED_MODULE_1__[/* DEFAULT_MAKE_OPTIONS */ "b"]), { keepMessageTypes: [], logMessageTypes: _constants__WEBPACK_IMPORTED_MODULE_1__[/* ALL_TYPES */ "a"].slice(), namespace: namespace });
    }
}
/* harmony default export */ __webpack_exports__["default"] = (makeConsole);


/***/ }),

/***/ "./src/utils/identity.ts":
/*!*******************************!*\
  !*** ./src/utils/identity.ts ***!
  \*******************************/
/*! exports provided: identity */
/*! exports used: identity */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return identity; });
function identity(data) {
    return data;
}


/***/ }),

/***/ "./src/utils/toHash.ts":
/*!*****************************!*\
  !*** ./src/utils/toHash.ts ***!
  \*****************************/
/*! exports provided: toHash */
/*! exports used: toHash */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return toHash; });
var toHash = function (array) {
    return array.reduce(function (acc, item) {
        acc[item] = true;
        return acc;
    }, Object.create(null));
};


/***/ })

/******/ });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,