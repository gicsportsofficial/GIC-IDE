import request from '../../tools/request';
import stringify from '../../tools/stringify';
/**
 * GET /utils/seed
 * Generate random seed
 */
export function fetchSeed(base, length) {
    return request({
        base,
        url: `/utils/seed${length ? `/${length}` : ''}`
    });
}
/**
 * POST /utils/script/compileCode
 * Compiles string code to base64 script representation
 */
export function fetchCompileCode(base, body) {
    return request({
        base,
        url: '/utils/script/compileCode',
        options: {
            method: 'POST',
            body,
            headers: {
                'Content-Type': 'application/json'
            }
        }
    });
}
/**
 * POST /utils/script/compileWithImports
 * Compiles string code with imports to base64 script representation
 */
export function fetchCompileWithImports(base, body) {
    return request({
        base,
        url: '/utils/script/compileWithImports',
        options: {
            method: 'POST',
            body: stringify(body),
            headers: {
                'Content-Type': 'application/json'
            }
        }
    });
}
/**
 * POST /utils/script/estimate
 * Estimates compiled code in Base64 representation
 */
export function fetchEstimate(base, body) {
    return request({
        base,
        url: '/utils/script/estimate',
        options: {
            method: 'POST',
            body,
            headers: {
                'Content-Type': 'application/json'
            }
        }
    });
}
/**
 * POST /utils/script/evaluate
 * Evaluates the provided expression, taking into account the deployed dApp contract
 */
export function fetchEvaluate(base, address, expr) {
    return request({
        base,
        url: `/utils/script/evaluate/${address}`,
        options: {
            method: 'POST',
            body: JSON.stringify({ expr }),
            headers: {
                'Content-Type': 'application/json'
            }
        }
    });
}
/**
 * POST /utils/transactionSerialize
 * Serialize transaction
 */
export function fetchTransactionSerialize(base, body) {
    return request({
        base,
        url: '/utils/transactionSerialize',
        options: {
            method: 'POST',
            body: stringify(body),
            headers: {
                'Content-Type': 'application/json'
            }
        }
    });
}
/**
 * POST /utils/hash/secure
 * Return SecureCryptographicHash of specified message
 */
export function fetchHashSecure(base, body) {
    return request({
        base,
        url: '/utils/hash/secure',
        options: {
            method: 'POST',
            body,
            headers: {
                'Content-Type': 'application/json'
            }
        }
    });
}
/**
 * POST /utils/hash/fast
 * Return FastCryptographicHash of specified message
 */
export function fetchHashFast(base, body) {
    return request({
        base,
        url: '/utils/hash/fast',
        options: {
            method: 'POST',
            body,
            headers: {
                'Content-Type': 'application/json'
            }
        }
    });
}
/**
 * POST /utils/script/meta
 * Account's script meta
 */
export function fetchScriptMeta(base, body) {
    return request({
        base,
        url: '/utils/script/meta',
        options: {
            method: 'POST',
            body,
            headers: {
                'Content-Type': 'application/json'
            }
        }
    });
}
/**
 * POST /utils/script/decompile
 * Decompiles base64 script representation to string code
 */
export function fetchScriptDecompile(base, body) {
    return request({
        base,
        url: '/utils/script/decompile',
        options: {
            method: 'POST',
            body,
            headers: {
                'Content-Type': 'application/json'
            }
        }
    });
}
/**
 * POST /utils/sign/{privateKey}
 * Return FastCryptographicHash of specified message
 */
export function fetchSignPrivateKey(base, privateKey, body) {
    return request({
        base,
        url: `/utils/sign/${privateKey}`,
        options: {
            method: 'POST',
            body,
            headers: {
                'Content-Type': 'application/json'
            }
        }
    });
}
/**
 * GET /utils/time
 * Current Node time (UTC)
 */
export function fetchNodeTime(base) {
    return request({
        base,
        url: '/utils/time'
    });
}
//# sourceMappingURL=index.js.map