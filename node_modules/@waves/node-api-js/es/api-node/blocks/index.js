import request from '../../tools/request';
/**
 * GET /blocks/headers/seq/{from}/{to}
 * Get block headers at specified heights
 * @param base
 * @param from
 * @param to
 */
export function fetchHeadersSeq(base, from, to, options = Object.create(null)) {
    return request({
        base,
        url: `/blocks/headers/seq/${from}/${to}`,
        options
    });
}
/**
 * GET /blocks/headers/last
 * Last block header
 * @param base
 */
export function fetchHeadersLast(base, options = Object.create(null)) {
    return request({
        base,
        url: `/blocks/headers/last`,
        options
    });
}
/**
 * GET /blocks/height/{id}
 * Height of a block by its id
 * @param base
 * @param id
 */
export function fetchHeightById(base, id) {
    return request({
        base,
        url: `/blocks/height/${id}`
    });
}
/**
 * GET /blocks/headers/at/{height}
 * Block header at height
 * @param base
 * @param height
 */
export function fetchHeadersAt(base, height, options = Object.create(null)) {
    return request({
        base,
        url: `/blocks/headers/at/${height}`,
        options
    });
}
/**
 * GET /blocks/headers/{id}
 * Get block at specified height
 * @param base
 * @param height
 */
export function fetchHeadersById(base, id, options = Object.create(null)) {
    return request({
        base,
        url: `/blocks/headers/${id}`,
        options
    });
}
/**
 * GET /blocks/at/{height}
 * Get block at specified height
 * @param base
 * @param height
 */
export function fetchBlockAt(base, height, options = Object.create(null)) {
    return request({
        base,
        url: `/blocks/at/${height}`,
        options
    });
}
/**
 * GET /blocks/seq/{from}/{to}
 * Block range
 * @param base
 * @param from
 * @param to
 */
export function fetchSeq(base, from, to, options = Object.create(null)) {
    return request({
        base,
        url: `/blocks/seq/${from}/${to}`,
        options
    });
}
/**
 * GET /blocks/{id}
 * Get block by its id
 * @param base
 * @param id
 */
export function fetchBlockById(base, id, options = Object.create(null)) {
    return request({
        base,
        url: `/blocks/${id}`,
        options
    });
}
/**
 * GET /blocks/first
 * Get genesis block
 * @param base
 */
export function fetchFirst(base, options = Object.create(null)) {
    return request({
        base,
        url: `/blocks/first`,
        options
    });
}
/**
 * /blocks/address/{address}/{from}/{to}
 * Get list of blocks generated by specified address
 * @param base
 * @param address
 * @param from
 * @param to
 */
export function fetchBlocksByAddress(base, address, from, to, options = Object.create(null)) {
    return request({
        base,
        url: `/blocks/address/${address}/${from}/${to}`,
        options
    });
}
/**
 * GET /blocks/last
 * Last block
 * @param base
 */
export function fetchLast(base, options = Object.create(null)) {
    return request({
        base,
        url: '/blocks/last',
        options
    });
}
/**
 * GET /blocks/delay/{id}/{blockNum}
 * Average delay in milliseconds between last blockNum blocks starting from block with id
 * @param base
 * @param id
 * @param blockNum
 */
export function fetchDelay(base, id, blockNum) {
    return request({
        base,
        url: `/blocks/delay/${id}/${blockNum}`
    });
}
/**
 * GET /blocks/height
 * @param base
 */
export function fetchHeight(base) {
    return request({
        base,
        url: '/blocks/height'
    });
}
/**
 * GET /blocks/heightByTimestamp
 * @param base
 */
export function fetchHeightByTimestamp(base, timestamp, options = Object.create(null)) {
    return request({
        base,
        url: `/blocks/heightByTimestamp/${timestamp}`,
        options
    });
}
//# sourceMappingURL=index.js.map