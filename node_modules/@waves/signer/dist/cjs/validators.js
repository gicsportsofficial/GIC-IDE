"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.orderValidator = exports.noop = exports.isRecipient = exports.isValidAlias = exports.isValidAddress = exports.isAlias = exports.isAssetId = exports.isValidAssetDescription = exports.isValidAssetName = exports.isPublicKey = exports.isValidData = exports.isValidDataPair = exports.validateType = exports.isBase64 = exports.ASSETS = exports.isValidAliasName = exports.isAttachment = exports.validateBySchema = exports.exception = exports.orEq = exports.isBoolean = exports.isNumberLike = exports.isNumber = exports.isString = exports.isRequired = exports.validatePipe = exports.isArray = void 0;
var tslib_1 = require("tslib");
var defaultTo_1 = tslib_1.__importDefault(require("ramda/src/defaultTo"));
var prop_1 = tslib_1.__importDefault(require("ramda/src/prop"));
var ifElse_1 = tslib_1.__importDefault(require("ramda/src/ifElse"));
var pipe_1 = tslib_1.__importDefault(require("ramda/src/pipe"));
var equals_1 = tslib_1.__importDefault(require("ramda/src/equals"));
var gte_1 = tslib_1.__importDefault(require("ramda/src/gte"));
var lte_1 = tslib_1.__importDefault(require("ramda/src/lte"));
var startsWith_1 = tslib_1.__importDefault(require("ramda/src/startsWith"));
var isNil_1 = tslib_1.__importDefault(require("ramda/src/isNil"));
var includes_1 = tslib_1.__importDefault(require("ramda/src/includes"));
var flip_1 = tslib_1.__importDefault(require("ramda/src/flip"));
var always_1 = tslib_1.__importDefault(require("ramda/src/always"));
var tryCatch_1 = tslib_1.__importDefault(require("ramda/src/tryCatch"));
var ts_lib_crypto_1 = require("@waves/ts-lib-crypto");
var TX_DEFAULTS = {
    MAX_ATTACHMENT: 140,
    ALIAS: {
        AVAILABLE_CHARS: '-.0123456789@_abcdefghijklmnopqrstuvwxyz',
        MAX_ALIAS_LENGTH: 30,
        MIN_ALIAS_LENGTH: 4,
    },
};
exports.isArray = function (value) { return Array.isArray(value); };
exports.validatePipe = function () {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    return function (value) {
        var isValid = true;
        for (var _i = 0, args_1 = args; _i < args_1.length; _i++) {
            var cb = args_1[_i];
            isValid = !!cb(value);
            if (!isValid) {
                return false;
            }
        }
        return isValid;
    };
};
exports.isRequired = function (required) { return function (value) {
    return !required || value != null;
}; };
exports.isString = function (value) {
    return typeof value === 'string' || value instanceof String;
};
exports.isNumber = function (value) {
    return (typeof value === 'number' || value instanceof Number) &&
        !isNaN(Number(value));
};
exports.isNumberLike = function (value) {
    return value != null && !isNaN(Number(value)) && !!(value || value === 0);
};
exports.isBoolean = function (value) {
    return value != null && (typeof value === 'boolean' || value instanceof Boolean);
};
exports.orEq = flip_1.default(includes_1.default);
exports.exception = function (msg) {
    throw new Error(msg);
};
exports.validateBySchema = function (schema, errorTpl) { return function (tx) {
    Object.entries(schema).forEach(function (_a) {
        var key = _a[0], cb = _a[1];
        var value = prop_1.default(key, tx || {});
        if (!cb(value)) {
            exports.exception(errorTpl(key, value));
        }
    });
    return true;
}; };
exports.isAttachment = ifElse_1.default(exports.orEq([null, undefined]), defaultTo_1.default(true), ifElse_1.default(exports.isString, 
// TODO Fix attachment gte(TX_DEFAULTS.MAX_ATTACHMENT)
pipe_1.default(prop_1.default('length'), always_1.default(true)), defaultTo_1.default(false)));
var validateChars = function (chars) { return function (value) {
    return value.split('').every(function (char) { return chars.includes(char); });
}; };
exports.isValidAliasName = ifElse_1.default(validateChars(TX_DEFAULTS.ALIAS.AVAILABLE_CHARS), pipe_1.default(prop_1.default('length'), exports.validatePipe(gte_1.default(TX_DEFAULTS.ALIAS.MAX_ALIAS_LENGTH), lte_1.default(TX_DEFAULTS.ALIAS.MIN_ALIAS_LENGTH))), defaultTo_1.default(false));
exports.ASSETS = {
    NAME_MIN_BYTES: 4,
    NAME_MAX_BYTES: 16,
    DESCRIPTION_MAX_BYTES: 1000,
};
exports.isBase64 = exports.validatePipe(ifElse_1.default(exports.isString, startsWith_1.default('base64:'), pipe_1.default(isNil_1.default)));
exports.validateType = {
    integer: exports.isNumberLike,
    boolean: exports.isBoolean,
    string: exports.isString,
    binary: exports.isBase64,
};
exports.isValidDataPair = function (data) { return !!(exports.validateType[data.type] && exports.validateType[data.type](data.value)); };
exports.isValidData = exports.validatePipe(exports.isRequired(true), pipe_1.default(prop_1.default('key'), exports.validatePipe(exports.isString, function (key) { return !!key; })), exports.isValidDataPair);
exports.isPublicKey = exports.validatePipe(exports.isString, tryCatch_1.default(function (v) { return ts_lib_crypto_1.base58Decode(v).length === 32; }, always_1.default(false)));
exports.isValidAssetName = exports.validatePipe(exports.isString, pipe_1.default(prop_1.default('length'), ifElse_1.default(lte_1.default(exports.ASSETS.NAME_MIN_BYTES), gte_1.default(exports.ASSETS.NAME_MAX_BYTES), defaultTo_1.default(false))));
exports.isValidAssetDescription = exports.validatePipe(exports.isString, pipe_1.default(prop_1.default('length'), gte_1.default(exports.ASSETS.DESCRIPTION_MAX_BYTES)));
exports.isAssetId = exports.validatePipe(ifElse_1.default(exports.orEq(['', null, undefined, 'WAVES']), defaultTo_1.default(true), exports.isString));
exports.isAlias = function (value) { return value.startsWith('alias:'); };
// TODO fix validator!!!
exports.isValidAddress = exports.isString;
exports.isValidAlias = pipe_1.default(function (value) { return value.split(':')[2]; }, exports.isValidAliasName);
exports.isRecipient = exports.validatePipe(exports.isString, ifElse_1.default(exports.isAlias, exports.isValidAlias, exports.isValidAddress));
var orderScheme = {
    orderType: exports.orEq(['sell', 'buy']),
    senderPublicKey: exports.isPublicKey,
    matcherPublicKey: exports.isPublicKey,
    version: exports.orEq([undefined, 0, 1, 2, 3]),
    assetPair: exports.validatePipe(exports.isRequired(true), pipe_1.default(prop_1.default('amountAsset'), exports.isAssetId), pipe_1.default(prop_1.default('priceAsset'), exports.isAssetId)),
    price: exports.isNumberLike,
    amount: exports.isNumberLike,
    matcherFee: exports.isNumberLike,
    expiration: exports.isNumberLike,
    timestamp: exports.isNumber,
    proofs: ifElse_1.default(exports.isArray, defaultTo_1.default(true), exports.orEq([undefined])),
};
var v12OrderScheme = {
    matcherFeeAssetId: exports.orEq([undefined, null, 'WAVES']),
};
var v3OrderScheme = {
    matcherFeeAssetId: exports.isAssetId,
};
// eslint-disable-next-line @typescript-eslint/no-empty-function
exports.noop = function () {
};
// TODO!!!
var validateOrder = exports.validateBySchema(orderScheme, exports.noop);
var validateOrderV2 = exports.validateBySchema(v12OrderScheme, exports.noop);
var validateOrderV3 = exports.validateBySchema(v3OrderScheme, exports.noop);
exports.orderValidator = exports.validatePipe(validateOrder, ifElse_1.default(pipe_1.default(prop_1.default('version'), equals_1.default(3)), validateOrderV3, validateOrderV2));
