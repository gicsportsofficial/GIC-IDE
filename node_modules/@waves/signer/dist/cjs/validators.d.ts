export declare const isArray: (value: unknown) => boolean;
export declare const validatePipe: (...args: Array<Function>) => (value: unknown) => boolean;
export declare const isRequired: (required: boolean) => (value: unknown) => boolean;
export declare const isString: (value: unknown) => boolean;
export declare const isNumber: (value: unknown) => boolean;
export declare const isNumberLike: (value: unknown) => boolean;
export declare const isBoolean: (value: unknown) => boolean;
export declare const orEq: <T>(list: Array<T>) => (item: T) => boolean;
export declare const exception: (msg: string) => never;
export declare const validateBySchema: (schema: Record<string, Function>, errorTpl: (key: string, value?: unknown) => string) => (tx: Record<string, any>) => boolean;
export declare const isAttachment: import("ramda").Arity1Fn;
export declare const isValidAliasName: import("ramda").Arity1Fn;
export declare const ASSETS: {
    NAME_MIN_BYTES: number;
    NAME_MAX_BYTES: number;
    DESCRIPTION_MAX_BYTES: number;
};
export declare const isBase64: (value: unknown) => boolean;
export declare const validateType: {
    integer: (value: unknown) => boolean;
    boolean: (value: unknown) => boolean;
    string: (value: unknown) => boolean;
    binary: (value: unknown) => boolean;
};
export declare const isValidDataPair: (data: {
    type: keyof typeof validateType;
    value: unknown;
}) => boolean;
export declare const isValidData: (value: unknown) => boolean;
export declare const isPublicKey: (value: unknown) => boolean;
export declare const isValidAssetName: (value: unknown) => boolean;
export declare const isValidAssetDescription: (value: unknown) => boolean;
export declare const isAssetId: (value: unknown) => boolean;
export declare const isAlias: (value: string) => boolean;
export declare const isValidAddress: (value: unknown) => boolean;
export declare const isValidAlias: (x0: string) => any;
export declare const isRecipient: (value: unknown) => boolean;
export declare const noop: () => void;
export declare const orderValidator: (value: unknown) => boolean;
