import { ERRORS, SignerApiArgumentsError, SignerAuthError, SignerEnsureProviderError, SignerError, SignerNetworkByteError, SignerNetworkError, SignerOptionsError, SignerProviderConnectError, SignerProviderInterfaceError, SignerProviderInternalError } from './SignerError';
import { IConsole } from '@waves/client-logs';
declare const ERRORS_MAP: {
    1000: typeof SignerOptionsError;
    1001: typeof SignerNetworkByteError;
    1005: typeof SignerProviderInterfaceError;
    1007: typeof SignerApiArgumentsError;
    1003: typeof SignerProviderConnectError;
    1004: typeof SignerEnsureProviderError;
    1006: typeof SignerProviderInternalError;
    1002: typeof SignerAuthError;
    1008: typeof SignerNetworkError;
};
export declare type ErrorHandler = <T extends keyof typeof ERRORS_MAP>(code: T, parameters: ConstructorParameters<typeof ERRORS_MAP[T]>) => SignerError;
export declare const errorHandlerFactory: (logger: IConsole) => ErrorHandler;
export {};
