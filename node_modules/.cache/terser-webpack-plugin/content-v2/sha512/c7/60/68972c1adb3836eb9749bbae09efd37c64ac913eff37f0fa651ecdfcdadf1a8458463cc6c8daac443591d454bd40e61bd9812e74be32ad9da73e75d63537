{"code":"webpackHotUpdate(\"app\",{\"./src/utils/waveskeeper.ts\":function(module,exports,__webpack_require__){\"use strict\";eval(\"\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\r\\nvar tslib_1 = __webpack_require__(\\\"./node_modules/tslib/tslib.es6.js\\\");\\r\\nvar range_1 = __webpack_require__(\\\"./src/utils/range.ts\\\");\\r\\nfunction signViaKeeper(tx, proofN) {\\r\\n    if (proofN === void 0) { proofN = 0; }\\r\\n    return tslib_1.__awaiter(this, void 0, Promise, function () {\\r\\n        var txInKeeperFormat, signedTx, _a, _b, signature, newProofs;\\r\\n        return tslib_1.__generator(this, function (_c) {\\r\\n            switch (_c.label) {\\r\\n                case 0:\\r\\n                    if (!window.Waves)\\r\\n                        throw new Error('Gic Wallet Pro not found');\\r\\n                    txInKeeperFormat = convert(tx);\\r\\n                    txInKeeperFormat.data.proofs = [];\\r\\n                    _b = (_a = JSON).parse;\\r\\n                    return [4, window.Waves.signTransaction(txInKeeperFormat)];\\r\\n                case 1:\\r\\n                    signedTx = _b.apply(_a, [_c.sent()]);\\r\\n                    signature = signedTx.proofs[0];\\r\\n                    newProofs = tslib_1.__spread(tx.proofs);\\r\\n                    if (proofN + 1 > tx.proofs.length) {\\r\\n                        newProofs.push.apply(newProofs, tslib_1.__spread(range_1.range(0, proofN + 1 - tx.proofs.length).map(function (_) { return ''; })));\\r\\n                    }\\r\\n                    newProofs[proofN] = signature;\\r\\n                    newProofs = newProofs.map(function (proof) { return proof == null ? '' : proof; });\\r\\n                    return [2, tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, signedTx), tx), { proofs: newProofs })];\\r\\n            }\\r\\n        });\\r\\n    });\\r\\n}\\r\\nexports.signViaKeeper = signViaKeeper;\\r\\nfunction convert(tx) {\\r\\n    var result = tslib_1.__assign({}, tx);\\r\\n    if (tx.fee) {\\r\\n        result.fee = {\\r\\n            coins: tx.fee,\\r\\n            assetId: 'WAVES'\\r\\n        };\\r\\n    }\\r\\n    if ('feeAssetId' in tx) {\\r\\n        result.fee.assetId = tx.feeAssetId;\\r\\n    }\\r\\n    if ('amount' in tx) {\\r\\n        result.amount = {\\r\\n            coins: tx.amount,\\r\\n            assetId: result.assetId || 'WAVES'\\r\\n        };\\r\\n    }\\r\\n    if ('transfers' in tx) {\\r\\n        result.totalAmount = {\\r\\n            coins: '0',\\r\\n            assetId: tx.assetId || 'WAVES'\\r\\n        };\\r\\n    }\\r\\n    if (tx.type === 3) {\\r\\n        result.precision = tx.precision == null ? 0 : tx.precision;\\r\\n    }\\r\\n    return {\\r\\n        type: tx.type,\\r\\n        data: result\\r\\n    };\\r\\n}\\r\\n\\n\\n//# sourceURL=webpack:///./src/utils/waveskeeper.ts?\")}});","extractedComments":[]}