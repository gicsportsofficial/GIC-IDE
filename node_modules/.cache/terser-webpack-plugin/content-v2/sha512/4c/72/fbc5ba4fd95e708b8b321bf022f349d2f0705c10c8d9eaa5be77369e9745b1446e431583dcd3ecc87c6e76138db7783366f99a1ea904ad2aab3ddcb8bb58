{"code":"webpackHotUpdate(\"app\",{\"./src/layout/Dialogs/MigrationDialog/index.tsx\":function(module,exports,__webpack_require__){\"use strict\";eval('\\r\\nObject.defineProperty(exports, \"__esModule\", { value: true });\\r\\nvar tslib_1 = __webpack_require__(\"./node_modules/tslib/tslib.es6.js\");\\r\\nvar react_1 = tslib_1.__importDefault(__webpack_require__(\"react\"));\\r\\nvar Dialog_1 = tslib_1.__importDefault(__webpack_require__(\"./src/components/Dialog/index.tsx\"));\\r\\nvar Button_1 = tslib_1.__importDefault(__webpack_require__(\"./src/components/Button/index.tsx\"));\\r\\nvar styles_less_1 = tslib_1.__importDefault(__webpack_require__(\"./src/layout/Dialogs/MigrationDialog/styles.less\"));\\r\\nvar mobx_react_1 = __webpack_require__(\"./node_modules/mobx-react/dist/mobxreact.esm.js\");\\r\\nvar AccountsStore_1 = __webpack_require__(\"./src/stores/AccountsStore.ts\");\\r\\nvar hosts_1 = __webpack_require__(\"./src/utils/hosts.ts\");\\r\\nvar Loading_1 = __webpack_require__(\"./src/layout/Dialogs/MigrationDialog/Loading.tsx\");\\r\\nvar Link_1 = tslib_1.__importDefault(__webpack_require__(\"./src/components/Link/index.tsx\"));\\r\\nvar MigrationDialog = (function (_super) {\\r\\n    tslib_1.__extends(MigrationDialog, _super);\\r\\n    function MigrationDialog() {\\r\\n        var _this = _super !== null && _super.apply(this, arguments) || this;\\r\\n        _this.handleExportState = function () { return _this.props.settingsStore.exportState(); };\\r\\n        _this.handleOpenIde = function (isStagenetMigration) {\\r\\n            if (isStagenetMigration === void 0) { isStagenetMigration = false; }\\r\\n            return _this.props.migrationStore.openIde(isStagenetMigration);\\r\\n        };\\r\\n        _this.handleMigrate = function (isStagenetMigration) {\\r\\n            if (isStagenetMigration === void 0) { isStagenetMigration = false; }\\r\\n            return _this.props.migrationStore.dispatchMigration(isStagenetMigration);\\r\\n        };\\r\\n        return _this;\\r\\n    }\\r\\n    MigrationDialog.prototype.render = function () {\\r\\n        var _this = this;\\r\\n        var files = this.props.filesStore.files;\\r\\n        var customNodes = this.props.settingsStore.customNodes;\\r\\n        var _a = this.props.migrationStore, stagenetMigrationState = _a.stagenetMigrationState, migrationState = _a.migrationState;\\r\\n        var _b = this.props.accountsStore, accountGroups = _b.accountGroups, nodesAccounts = _b.nodesAccounts;\\r\\n        var stagenetAccounts = accountGroups[AccountsStore_1.NetworkChainId.S];\\r\\n        var hasStagenetAccounts = stagenetAccounts ? stagenetAccounts.accounts.length > 0 : false;\\r\\n        var isMigrationAvailable = nodesAccounts.length > 0 ||\\r\\n            files.length > 0 ||\\r\\n            customNodes.length > 0;\\r\\n        return react_1.default.createElement(Dialog_1.default, { className: styles_less_1.default.dialog, title: \"Move IDE\", width: 618, footer: isMigrationAvailable\\r\\n                ? (react_1.default.createElement(\"div\", { className: styles_less_1.default.footer },\\r\\n                    react_1.default.createElement(\"div\", { className: styles_less_1.default.footer_left },\\r\\n                        react_1.default.createElement(Button_1.default, { type: \"action-gray\", onClick: this.handleExportState }, \"Export\")),\\r\\n                    react_1.default.createElement(\"div\", { className: styles_less_1.default.footer_right },\\r\\n                        hasStagenetAccounts && (react_1.default.createElement(Button_1.default, { type: \"action-blue\", onClick: function (e) { return stagenetMigrationState.success ? _this.handleOpenIde(true) : _this.handleMigrate(true); }, disabled: !(stagenetMigrationState.success || !stagenetMigrationState.loading) }, stagenetMigrationState.success ? \\'Open new Stagenet IDE\\' : stagenetMigrationState.loading ? react_1.default.createElement(Loading_1.Loading, null) : \\'Migrate Stagenet\\')),\\r\\n                        react_1.default.createElement(Button_1.default, { type: \"action-blue\", onClick: function (e) { return migrationState.success ? _this.handleOpenIde() : _this.handleMigrate(); }, disabled: !(migrationState.success || !migrationState.loading) }, migrationState.success ? \\'Open new IDE\\' : migrationState.loading ? react_1.default.createElement(Loading_1.Loading, null) : \\'Migrate\\'))))\\r\\n                : undefined, visible: true },\\r\\n            react_1.default.createElement(\"div\", { className: styles_less_1.default.root },\\r\\n                react_1.default.createElement(\"div\", { className: styles_less_1.default.row },\\r\\n                    \"Dear users, please note that GIC IDE has moved to\\\\u00A0\",\\r\\n                    react_1.default.createElement(Link_1.default, { className: styles_less_1.default.link, href: hosts_1.activeHostSecure }, hosts_1.formatHost(hosts_1.activeHostSecure)),\\r\\n                    \".\"),\\r\\n                isMigrationAvailable && (react_1.default.createElement(react_1.default.Fragment, null,\\r\\n                    react_1.default.createElement(\"div\", { className: styles_less_1.default.row }, \"To automatically transfer your projects and accounts to the new service, click the \\\\\"Migrate\\\\\" button.\"),\\r\\n                    hasStagenetAccounts && (react_1.default.createElement(\"div\", { className: styles_less_1.default.row },\\r\\n                        \"To work with Stagenet network you need to use\\\\u00A0\",\\r\\n                        react_1.default.createElement(Link_1.default, { className: styles_less_1.default.link, href: hosts_1.activeHosts.stagenet.secure }, hosts_1.activeHosts.stagenet.secure.replace(/^https?:\\\\/\\\\//, \\'\\')),\\r\\n                        \". To automatically transfer your data to Stagenet network, click the \\\\\"Migrate Stagenet\\\\\" button.\")),\\r\\n                    react_1.default.createElement(\"div\", { className: styles_less_1.default.row }, \"You can also transfer your data manually using the \\\\\"Export\\\\\" button.\")))));\\r\\n    };\\r\\n    MigrationDialog = tslib_1.__decorate([\\r\\n        mobx_react_1.inject(\\'migrationStore\\', \\'accountsStore\\', \\'settingsStore\\', \\'filesStore\\'),\\r\\n        mobx_react_1.observer\\r\\n    ], MigrationDialog);\\r\\n    return MigrationDialog;\\r\\n}(react_1.default.Component));\\r\\nexports.default = MigrationDialog;\\r\\n\\n\\n//# sourceURL=webpack:///./src/layout/Dialogs/MigrationDialog/index.tsx?')}});","extractedComments":[]}